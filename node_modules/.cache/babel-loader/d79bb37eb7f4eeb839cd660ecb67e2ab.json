{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pinoo\\\\OneDrive\\\\Documentos\\\\react\\\\photo-tagging\\\\src\\\\pages\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { firestore } from \"../firebase\";\nimport isCoordWithinTwoDegrees from \"../util/isCoordWithinTwoDegrees\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport allLevelData from \"../allLevelData\"; // components\n\nimport CharacterDropdown from \"../components/CharacterDropdown\";\nimport Modal from \"../components/Modal\"; // bad word filter\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Filter = require(\"bad-words\");\n\nconst emojiArray = [\"😀\", \"😁\", \"😂\", \"🤣\", \"😃\", \"😄\", \"😅\", \"😆\", \"😉\", \"😊\", \"😋\", \"😎\", \"😍\", \"😘\", \"🥰\", \"😗\"];\nconst customFilter = new Filter({\n  placeHolder: `${emojiArray[Math.floor(Math.random() * emojiArray.length)]}`\n});\nexport default function Game({\n  level,\n  levelData = {},\n  username,\n  updateUsername,\n  characters,\n  setCharacters,\n  setInLeaderboard,\n  setInHome,\n  setInInfo\n}) {\n  _s();\n\n  const [gameId, setgameId] = useState(null);\n  const [image, setImage] = useState(\"\");\n  const [gameover, setGameover] = useState(false);\n  const [elapsedSeconds, setElapsedSeconds] = useState(null);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [coords, setCoords] = useState(null);\n  const [clickLocation, setClickLocation] = useState({\n    left: \"0%\",\n    top: \"0%\"\n  });\n  const [startTime, setStartTime] = useState(Date.now());\n  setInLeaderboard(false);\n  setInHome(false);\n  setInInfo(false);\n  useEffect(() => {\n    // Load level and characters\n    let loadedCharacters = allLevelData[level].characters;\n    setImage(allLevelData[level].board);\n    setCharacters(loadedCharacters);\n  }, [level, levelData]);\n  useEffect(() => {\n    setGameover(characters === null || characters === void 0 ? void 0 : characters.every(char => char.found));\n  }, [characters]);\n  useEffect(() => {\n    if (gameover === true) {\n      let endingTimestamp = Date.now();\n      let score = (endingTimestamp - startTime) / 1000;\n      let date = new Date().toString().split(\" \").splice(1, 3).join(\" \");\n\n      if (score < 0.1) {\n        return;\n      }\n\n      firestore.collection(\"games\").add({\n        startTime: startTime,\n        endTime: endingTimestamp,\n        level,\n        characters: characters,\n        elapsedSeconds: score,\n        date: date\n      }).then(docRef => {\n        setgameId(docRef.id);\n        firestore.collection(\"games\").doc(docRef.id).onSnapshot(doc => {\n          const data = doc.data();\n          setElapsedSeconds(data === null || data === void 0 ? void 0 : data.elapsedSeconds);\n        });\n      });\n    }\n  }, [gameover]);\n\n  const getLocationImageClick = e => {\n    const xCoord = Math.round(e.nativeEvent.offsetX / e.nativeEvent.target.offsetWidth * 100);\n    const yCoord = Math.round(e.nativeEvent.offsetY / e.nativeEvent.target.offsetHeight * 100);\n    const coords = {\n      xCoord,\n      yCoord\n    };\n    return coords;\n  };\n\n  const updateClickLocation = coords => {\n    const {\n      xCoord,\n      yCoord\n    } = coords;\n    const updatedCoords = {\n      left: xCoord + \"%\",\n      top: yCoord + \"%\"\n    };\n    setClickLocation(updatedCoords);\n    setShowDropdown(true);\n  };\n\n  const imageClick = e => {\n    const coords = getLocationImageClick(e);\n    setCoords(coords);\n    updateClickLocation(coords);\n  };\n\n  const hideDropdown = () => setShowDropdown(false);\n\n  const dropdownClick = character => {\n    const gameSelection = {\n      coords,\n      character,\n      gameId,\n      level\n    }; // check for character\n\n    const selectedCharacter = characters.find(char => {\n      return char.name === character;\n    });\n    const {\n      xCoord,\n      yCoord\n    } = selectedCharacter;\n    const isCharacterAtCoords = isCoordWithinTwoDegrees(xCoord, coords.xCoord) && isCoordWithinTwoDegrees(yCoord, coords.yCoord);\n\n    if (isCharacterAtCoords) {\n      const updatedCharacters = characters.map(char => char.name === character ? { ...char,\n        found: true\n      } : char);\n      setCharacters(updatedCharacters);\n    } // check for character on server\n\n\n    firestore.collection(\"playerSelection\").add(gameSelection);\n    hideDropdown();\n  };\n\n  const submitScore = async () => {\n    const highscoreRef = await firestore.collection(\"games\").doc(gameId).get();\n    const highscoreData = highscoreRef.data();\n    const newHighscore = {\n      gameId,\n      level: highscoreData.level,\n      time: highscoreData.elapsedSeconds,\n      name: customFilter.clean(username),\n      date: highscoreData.date\n    };\n    firestore.collection(\"highscores\").add(newHighscore);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      children: /*#__PURE__*/_jsxDEV(OutsideClickHandler, {\n        onOutsideClick: hideDropdown,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"game-board-image\",\n          src: image,\n          alt: \"Game Level\",\n          onClick: imageClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CharacterDropdown, {\n          show: showDropdown,\n          characters: characters,\n          clickLocation: clickLocation,\n          clicked: dropdownClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      showModal: gameover,\n      seconds: elapsedSeconds,\n      username: username,\n      updateUsername: updateUsername,\n      submitScore: submitScore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Game, \"WXs5TU+s3vQMGuzeQTAbvKIm+Uw=\");\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["C:/Users/pinoo/OneDrive/Documentos/react/photo-tagging/src/pages/Game.js"],"names":["React","useState","useEffect","firestore","isCoordWithinTwoDegrees","OutsideClickHandler","allLevelData","CharacterDropdown","Modal","Filter","require","emojiArray","customFilter","placeHolder","Math","floor","random","length","Game","level","levelData","username","updateUsername","characters","setCharacters","setInLeaderboard","setInHome","setInInfo","gameId","setgameId","image","setImage","gameover","setGameover","elapsedSeconds","setElapsedSeconds","showDropdown","setShowDropdown","coords","setCoords","clickLocation","setClickLocation","left","top","startTime","setStartTime","Date","now","loadedCharacters","board","every","char","found","endingTimestamp","score","date","toString","split","splice","join","collection","add","endTime","then","docRef","id","doc","onSnapshot","data","getLocationImageClick","e","xCoord","round","nativeEvent","offsetX","target","offsetWidth","yCoord","offsetY","offsetHeight","updateClickLocation","updatedCoords","imageClick","hideDropdown","dropdownClick","character","gameSelection","selectedCharacter","find","name","isCharacterAtCoords","updatedCharacters","map","submitScore","highscoreRef","get","highscoreData","newHighscore","time","clean"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { firestore } from \"../firebase\";\r\nimport isCoordWithinTwoDegrees from \"../util/isCoordWithinTwoDegrees\";\r\nimport OutsideClickHandler from \"react-outside-click-handler\";\r\nimport allLevelData from \"../allLevelData\";\r\n// components\r\nimport CharacterDropdown from \"../components/CharacterDropdown\";\r\nimport Modal from \"../components/Modal\";\r\n// bad word filter\r\nconst Filter = require(\"bad-words\");\r\nconst emojiArray = [\r\n  \"😀\",\r\n  \"😁\",\r\n  \"😂\",\r\n  \"🤣\",\r\n  \"😃\",\r\n  \"😄\",\r\n  \"😅\",\r\n  \"😆\",\r\n  \"😉\",\r\n  \"😊\",\r\n  \"😋\",\r\n  \"😎\",\r\n  \"😍\",\r\n  \"😘\",\r\n  \"🥰\",\r\n  \"😗\",\r\n];\r\n\r\nconst customFilter = new Filter({\r\n  placeHolder: `${emojiArray[Math.floor(Math.random() * emojiArray.length)]}`,\r\n});\r\n\r\nexport default function Game({\r\n  level,\r\n  levelData = {},\r\n  username,\r\n  updateUsername,\r\n  characters,\r\n  setCharacters,\r\n  setInLeaderboard,\r\n  setInHome,\r\n  setInInfo,\r\n}) {\r\n  const [gameId, setgameId] = useState(null);\r\n  const [image, setImage] = useState(\"\");\r\n  const [gameover, setGameover] = useState(false);\r\n  const [elapsedSeconds, setElapsedSeconds] = useState(null);\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n  const [coords, setCoords] = useState(null);\r\n  const [clickLocation, setClickLocation] = useState({ left: \"0%\", top: \"0%\" });\r\n  const [startTime, setStartTime] = useState(Date.now());\r\n\r\n  setInLeaderboard(false);\r\n  setInHome(false);\r\n  setInInfo(false);\r\n\r\n  useEffect(() => {\r\n    // Load level and characters\r\n    let loadedCharacters = allLevelData[level].characters;\r\n    setImage(allLevelData[level].board);\r\n    setCharacters(loadedCharacters);\r\n  }, [level, levelData]);\r\n\r\n  useEffect(() => {\r\n    setGameover(characters?.every((char) => char.found));\r\n  }, [characters]);\r\n\r\n  useEffect(() => {\r\n    if (gameover === true) {\r\n      let endingTimestamp = Date.now();\r\n      let score = (endingTimestamp - startTime) / 1000;\r\n      let date = new Date().toString().split(\" \").splice(1, 3).join(\" \");\r\n      if (score < 0.1) {\r\n        return;\r\n      }\r\n      firestore\r\n        .collection(\"games\")\r\n        .add({\r\n          startTime: startTime,\r\n          endTime: endingTimestamp,\r\n          level,\r\n          characters: characters,\r\n          elapsedSeconds: score,\r\n          date: date,\r\n        })\r\n        .then((docRef) => {\r\n          setgameId(docRef.id);\r\n          firestore\r\n            .collection(\"games\")\r\n            .doc(docRef.id)\r\n            .onSnapshot((doc) => {\r\n              const data = doc.data();\r\n              setElapsedSeconds(data?.elapsedSeconds);\r\n            });\r\n        });\r\n    }\r\n  }, [gameover]);\r\n\r\n  const getLocationImageClick = (e) => {\r\n    const xCoord = Math.round(\r\n      (e.nativeEvent.offsetX / e.nativeEvent.target.offsetWidth) * 100\r\n    );\r\n    const yCoord = Math.round(\r\n      (e.nativeEvent.offsetY / e.nativeEvent.target.offsetHeight) * 100\r\n    );\r\n    const coords = { xCoord, yCoord };\r\n    return coords;\r\n  };\r\n\r\n  const updateClickLocation = (coords) => {\r\n    const { xCoord, yCoord } = coords;\r\n    const updatedCoords = { left: xCoord + \"%\", top: yCoord + \"%\" };\r\n    setClickLocation(updatedCoords);\r\n    setShowDropdown(true);\r\n  };\r\n\r\n  const imageClick = (e) => {\r\n    const coords = getLocationImageClick(e);\r\n    setCoords(coords);\r\n    updateClickLocation(coords);\r\n  };\r\n\r\n  const hideDropdown = () => setShowDropdown(false);\r\n\r\n  const dropdownClick = (character) => {\r\n    const gameSelection = { coords, character, gameId, level };\r\n\r\n    // check for character\r\n    const selectedCharacter = characters.find((char) => {\r\n      return char.name === character;\r\n    });\r\n    const { xCoord, yCoord } = selectedCharacter;\r\n    const isCharacterAtCoords =\r\n      isCoordWithinTwoDegrees(xCoord, coords.xCoord) &&\r\n      isCoordWithinTwoDegrees(yCoord, coords.yCoord);\r\n    if (isCharacterAtCoords) {\r\n      const updatedCharacters = characters.map((char) =>\r\n        char.name === character ? { ...char, found: true } : char\r\n      );\r\n      setCharacters(updatedCharacters);\r\n    }\r\n\r\n    // check for character on server\r\n    firestore.collection(\"playerSelection\").add(gameSelection);\r\n    hideDropdown();\r\n  };\r\n\r\n  const submitScore = async () => {\r\n    const highscoreRef = await firestore.collection(\"games\").doc(gameId).get();\r\n    const highscoreData = highscoreRef.data();\r\n    const newHighscore = {\r\n      gameId,\r\n      level: highscoreData.level,\r\n      time: highscoreData.elapsedSeconds,\r\n      name: customFilter.clean(username),\r\n      date: highscoreData.date,\r\n    };\r\n    firestore.collection(\"highscores\").add(newHighscore);\r\n  };\r\n\r\n  return (\r\n    <div className=\"gameWrapper\">\r\n      <div className=\"relative\">\r\n        <OutsideClickHandler onOutsideClick={hideDropdown}>\r\n          <img\r\n            className=\"game-board-image\"\r\n            src={image}\r\n            alt=\"Game Level\"\r\n            onClick={imageClick}\r\n          />\r\n          <CharacterDropdown\r\n            show={showDropdown}\r\n            characters={characters}\r\n            clickLocation={clickLocation}\r\n            clicked={dropdownClick}\r\n          />\r\n        </OutsideClickHandler>\r\n      </div>\r\n      <Modal\r\n        showModal={gameover}\r\n        seconds={elapsedSeconds}\r\n        username={username}\r\n        updateUsername={updateUsername}\r\n        submitScore={submitScore}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}