{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pinoo\\\\OneDrive\\\\Documentos\\\\react\\\\photo-tagging\\\\src\\\\pages\\\\Leaderboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"../components/Card\";\nimport LeaderboardTable from \"../components/LeaderboardTable\";\nimport { firestore } from \"../firebase\";\nimport allLevelData from \"../allLevelData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Leaderboard = ({\n  level,\n  setLevel,\n  setInGame,\n  setInLeaderboard,\n  setInHome,\n  setInInfo\n}) => {\n  _s();\n\n  var _Object$keys;\n\n  const [leaderboardData, setLeaderboardData] = useState([]);\n  setInGame(false);\n  setInHome(false);\n  setInInfo(false);\n  setInLeaderboard(true);\n  useEffect(() => {\n    const getLeaderboardData = async () => {\n      const leaderArray = [];\n      const firestoreData = await firestore.collection(\"highscores\").get();\n      firestoreData.forEach(doc => {\n        leaderArray.push(doc.data());\n      });\n\n      function compare(a, b) {\n        const score1 = a.time;\n        const score2 = b.time;\n        let comparison = 0;\n\n        if (score1 > score2) {\n          comparison = 1;\n        } else if (score1 < score2) {\n          comparison = -1;\n        }\n\n        return comparison;\n      }\n\n      leaderArray.sort(compare);\n      setLeaderboardData(leaderArray);\n    };\n\n    getLeaderboardData();\n  }, []);\n  const levelsArr = (_Object$keys = Object.keys(allLevelData)) === null || _Object$keys === void 0 ? void 0 : _Object$keys.map(num => {\n    const number = parseInt(num);\n    const level = allLevelData[number];\n    return {\n      name: level.name,\n      image: level.board,\n      number\n    };\n  });\n\n  const Levels = () => {\n    return levelsArr.map(i => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        img: i.image,\n        alt: i.name,\n        small: true,\n        active: level === i.number,\n        clicked: () => setLevel(i.number),\n        children: i.name\n      }, i.number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"leaderboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard-levels-grid\",\n      children: /*#__PURE__*/_jsxDEV(Levels, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `leaderboard-level-title ${allLevelData[level].name}`,\n      children: allLevelData[level].name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LeaderboardTable, {\n      values: leaderboardData,\n      level: level\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Leaderboard, \"4cD9i9jxwrIEo3cNalgdtlJVJTo=\");\n\n_c = Leaderboard;\nexport default Leaderboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"sources":["C:/Users/pinoo/OneDrive/Documentos/react/photo-tagging/src/pages/Leaderboard.js"],"names":["React","useState","useEffect","Card","LeaderboardTable","firestore","allLevelData","Leaderboard","level","setLevel","setInGame","setInLeaderboard","setInHome","setInInfo","leaderboardData","setLeaderboardData","getLeaderboardData","leaderArray","firestoreData","collection","get","forEach","doc","push","data","compare","a","b","score1","time","score2","comparison","sort","levelsArr","Object","keys","map","num","number","parseInt","name","image","board","Levels","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Card from \"../components/Card\";\r\nimport LeaderboardTable from \"../components/LeaderboardTable\";\r\nimport { firestore } from \"../firebase\";\r\nimport allLevelData from \"../allLevelData\";\r\n\r\nconst Leaderboard = ({\r\n  level,\r\n  setLevel,\r\n  setInGame,\r\n  setInLeaderboard,\r\n  setInHome,\r\n  setInInfo,\r\n}) => {\r\n  const [leaderboardData, setLeaderboardData] = useState([]);\r\n  setInGame(false);\r\n  setInHome(false);\r\n  setInInfo(false);\r\n  setInLeaderboard(true);\r\n\r\n  useEffect(() => {\r\n    const getLeaderboardData = async () => {\r\n      const leaderArray = [];\r\n      const firestoreData = await firestore.collection(\"highscores\").get();\r\n      firestoreData.forEach((doc) => {\r\n        leaderArray.push(doc.data());\r\n      });\r\n\r\n      function compare(a, b) {\r\n        const score1 = a.time;\r\n        const score2 = b.time;\r\n\r\n        let comparison = 0;\r\n        if (score1 > score2) {\r\n          comparison = 1;\r\n        } else if (score1 < score2) {\r\n          comparison = -1;\r\n        }\r\n        return comparison;\r\n      }\r\n      leaderArray.sort(compare);\r\n      setLeaderboardData(leaderArray);\r\n    };\r\n    getLeaderboardData();\r\n  }, []);\r\n\r\n  const levelsArr = Object.keys(allLevelData)?.map((num) => {\r\n    const number = parseInt(num);\r\n    const level = allLevelData[number];\r\n    return { name: level.name, image: level.board, number };\r\n  });\r\n\r\n  const Levels = () => {\r\n    return levelsArr.map((i) => {\r\n      return (\r\n        <Card\r\n          img={i.image}\r\n          alt={i.name}\r\n          small\r\n          active={level === i.number}\r\n          clicked={() => setLevel(i.number)}\r\n          key={i.number}\r\n        >\r\n          {i.name}\r\n        </Card>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"leaderboard-container\">\r\n      <div className=\"leaderboard-levels-grid\">\r\n        <Levels />\r\n      </div>\r\n      <span className={`leaderboard-level-title ${allLevelData[level].name}`}>\r\n        {allLevelData[level].name}\r\n      </span>\r\n      <LeaderboardTable values={leaderboardData} level={level} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Leaderboard;\r\n"]},"metadata":{},"sourceType":"module"}